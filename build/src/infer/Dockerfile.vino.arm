# Major references
#
# https://download.01.org/opencv/2020/openvinotoolkit/2020.1/open_model_zoo/
# https://docs.openvinotoolkit.org/2020.4/openvino_docs_install_guides_installing_openvino_docker_linux.html
#
# Goal of this dockerfile is to create image that will be used for inferencing. Original depedencies file
# has been modified accordingly. TODO: Further trim docker image size
#

FROM balenalib/raspberrypi3

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    autoconf \
    automake \
    build-essential \
    cpio \
    cmake \
    curl \
    wget \
    gnupg2 \
    libdrm2 \
    libglib2.0-0 \
    libtool \
    libgtk-3-0 \
    libblas-dev liblapack-dev libatlas-base-dev \
    gfortran \
    udev \
    unzip \
    python3-pip \
    python3-dev && \
    rm -rf /var/lib/apt/lists/*
    
RUN mkdir -p /opt/intel/openvino && \
    curl -SL https://download.01.org/opencv/2020/openvinotoolkit/2020.4/l_openvino_toolkit_runtime_raspbian_p_2020.4.287.tgz | tar -xzC /opt/intel/openvino --strip 1

RUN python3.7 -m pip install --no-cache-dir \
    py-cpuinfo \
    numpy \
    requests && \
    rm -rf /var/lib/apt/lists/*

# Model download
ENV APP_MODEL_FMWK vino
ENV APP_MODEL_DIR /opt/horizon/inference/models/openvino/2020.1/FP16/
ENV APP_MODEL_XML face-detection-adas-0001.xml
ENV APP_MODEL_BIN face-detection-adas-0001.bin
RUN mkdir -p /opt/horizon/inference/models/openvino/2020.1/FP16/ && \
    cd /opt/horizon/inference/models/openvino/2020.1/FP16/ && \
    wget --no-check-certificate https://download.01.org/opencv/2020/openvinotoolkit/2020.1/open_model_zoo/models_bin/1/face-detection-adas-0001/FP16/face-detection-adas-0001.bin && \
    wget --no-check-certificate https://download.01.org/opencv/2020/openvinotoolkit/2020.1/open_model_zoo/models_bin/1/face-detection-adas-0001/FP16/face-detection-adas-0001.xml

## NOT TO BE RUN in DOCKERFILE #########################
# Build outside of the dockerfile on raspberry and then copy it here
# How to build on raspberry
# source /opt/intel/openvino/bin/setupvars.sh 
# /opt/intel/openvino/install_dependencies/install_NCS_udev_rules.sh
# mkdir build && cd build
# cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-march=armv7-a" /opt/intel/openvino/deployment_tools/inference_engine/samples*/cpp*
# make -j4 object_detection_sample_ssd
# cd ..
# ./build/armv7l/Release/object_detection_sample_ssd -m face-detection-adas-0001.xml -d MYRIAD -i multiple-facial-expression.jpg 
## NOT TO BE RUN in DOCKERFILE #########################

WORKDIR /

# Copy built library here
COPY ./build/armv7l/Release/lib/libformat_reader.so /opt/intel/openvino/deployment_tools/inference_engine/lib/armv7l/

### Test code
# Test image
#COPY multiple-facial-expression.jpg .
# TEST CPP code to test via docker run 
#COPY ./build/armv7l/Release/object_detection_sample_ssd .
# ./object_detection_sample_ssd -m face-detection-adas-0001.xml -d MYRIAD -i multiple-facial-expression.jpg 
### Test code

RUN mkdir -p package/detect package/util package/video 
COPY service/package/detect/*.py package/detect/
COPY service/package/video/*.py package/video/
COPY service/package/util/*.py package/util/
COPY service/package/*.py package/
COPY service/videoObjectDetector.py .

CMD [ "/bin/bash", "-c", "source /opt/intel/openvino/bin/setupvars.sh ; /usr/bin/python3 videoObjectDetector.py" ]

# CMD /usr/bin/python3 videoObjectDetector.py


